---
import { API_URL, WEBSITE } from '../../../utils/constants';
import type { Location, Service, Review } from '../../../utils/types';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getReviewsByServiceAndLocationWithBackfill } from '../../../utils/reviews';

const title = 'EVO Plumbing and Heating';
const description = 'EVO Plumbing and Heating.';

// Generate every location for each service
export async function getStaticPaths() {
	const services = await fetch(`${API_URL}/services/website/${WEBSITE}`).then((response) =>
		response.json()
	);

	const locations = await fetch(`${API_URL}/locations`).then((response) => response.json());

	return services.map((service: Service) => {
		return locations.map((location: Location) => {
			return {
				params: { serviceSlug: service.slug, locationSlug: location.slug },
				props: { location, service }
			};
		});
	});
}

const { location, service } = Astro.props;

const locationsInSameCounty = await fetch(`${API_URL}/locations/county/${location.county}`).then(
	(response) => response.json()
);

const reviews: Review[] = await getReviewsByServiceAndLocationWithBackfill(
	service.id,
	location.postcode,
	location.county
);
---

<BaseLayout title={title} description={description}>
	<h1>{service.name}: {location.name}</h1>

	<h2>{reviews.length} reviews</h2>
	{
		reviews.map((review) => (
			<p>
				{review.id}, {review.date}, {review.title}, {review.postcode}
			</p>
		))
	}

	<h2>Locations in the same county</h2>

	{
		locationsInSameCounty.map(
			(locationInSameCounty: Location) =>
				locationInSameCounty.slug !== location.slug && (
					<a href={`/${service.slug}/${locationInSameCounty.slug}`}>{locationInSameCounty.name}</a>
				)
		)
	}
</BaseLayout>
